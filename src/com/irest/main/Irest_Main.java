/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.irest.main;

import com.irest.dialogue.ErrorDialoge;
import com.irest.dialogue.Irest_dialogue;
import com.irest.dialogue.UpdateDialoge;
import static com.irest.main.Irest_Main.btnSelectMusicFile;
import com.irest.tools.Constants;
import com.irest.tools.Tools;
import java.awt.AWTException;
import java.awt.Color;
import static java.awt.Frame.ICONIFIED;
import static java.awt.Frame.MAXIMIZED_BOTH;
import static java.awt.Frame.NORMAL;
import java.awt.Image;
import java.awt.MenuItem;
import java.awt.PopupMenu;
import java.awt.SystemTray;
import java.awt.TrayIcon;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowEvent;
import java.awt.event.WindowStateListener;
import java.io.BufferedInputStream;
import java.io.InputStream;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.UIManager;

//import static java.awt.Toolkit.getDefaultToolkit;
/**
 *
 * @author palashs
 */
public class Irest_Main extends javax.swing.JFrame {

    Tools objTools;
    SystemTray tray;
    private TrayIcon trayIcon;

    /**
     * Creates new form Irest_Main
     */
    public Irest_Main() {

        initComponents();
        try {
            InputStream is = new BufferedInputStream(getClass().getResourceAsStream(
                    "/com/irest/image/paint.png"));
            Image image = ImageIO.read(is);
            setIconImage(image);
        } catch (Exception e) {
            // TODO: handle exception
        }
        this.setBackground(Color.yellow);
        this.setLocationRelativeTo(null);
//        this.setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getClassLoader().getResource("C:\\Users\\Public\\Pictures\\Sample Pictures\\Desert.jpg")));
        objTools = new Tools();
        Constants.images = objTools.loadImages();

        jTextField1.setText(Constants.schedule7);
        microtime.setValue(Constants.timeMicroBreak);
        microduration.setValue(Constants.microDuration);
        midduration.setValue(Constants.midDuration);
        longduration.setValue(Constants.longDuration);
        num1.setValue(Constants.numberOfMicros);
        num2.setValue(Constants.numberOfMids);
        initialiseFirstValue();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnStartStop = new javax.swing.JButton();
        longduration = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        midduration = new javax.swing.JSpinner();
        num2 = new javax.swing.JSpinner();
        num1 = new javax.swing.JSpinner();
        jLabel12 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        microtime = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        microduration = new javax.swing.JSpinner();
        image = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        btnSelectMusicFile = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("IRest");
        setBackground(new java.awt.Color(0, 153, 153));
        setIconImages(null);

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setBorder(new javax.swing.border.MatteBorder(null));

        jLabel4.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 204));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("After how many Micro Break you want a Mid Break");

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 0, 204));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("minutes");

        btnStartStop.setBackground(new java.awt.Color(255, 0, 51));
        btnStartStop.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnStartStop.setForeground(new java.awt.Color(0, 0, 153));
        btnStartStop.setText("Start");
        btnStartStop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartStopActionPerformed(evt);
            }
        });

        longduration.setModel(new javax.swing.SpinnerNumberModel(5, 5, 10, 1));

        jLabel1.setBackground(new java.awt.Color(153, 0, 153));
        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 204));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Choose a music file to play");

        jLabel8.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 0, 204));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("seconds");

        jLabel10.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 0, 204));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("minutes");

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("minutes for");

        midduration.setModel(new javax.swing.SpinnerNumberModel(2, 2, 4, 1));

        num2.setModel(new javax.swing.SpinnerNumberModel(3, 3, 5, 1));

        num1.setModel(new javax.swing.SpinnerNumberModel(3, 3, 5, 1));

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(0, 0, 204));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("After how many Mid Break you want a Long Break");

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 204));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Enter the time after which you want to recieve Micro Break");

        microtime.setModel(new javax.swing.SpinnerNumberModel(3, 3, 10, 1));
        microtime.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                microtimeMouseClicked(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 0, 204));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Enter the time for which you want a Long Break");

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 11)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 0, 204));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Enter the time for which you want a Mid Break");

        microduration.setModel(new javax.swing.SpinnerNumberModel(15, 15, 45, 1));

        image.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/irest/image/hells.jpg"))); // NOI18N

        jLabel13.setBackground(new java.awt.Color(0, 204, 204));
        jLabel13.setDisplayedMnemonic('I');
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/irest/image/Irest.png"))); // NOI18N

        btnSelectMusicFile.setBackground(new java.awt.Color(204, 204, 0));
        btnSelectMusicFile.setFont(new java.awt.Font("Comic Sans MS", 1, 11)); // NOI18N
        btnSelectMusicFile.setForeground(new java.awt.Color(0, 0, 204));
        btnSelectMusicFile.setText("Select");
        btnSelectMusicFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelectMusicFileActionPerformed(evt);
            }
        });

        jTextField1.setEditable(false);

        jButton2.setBackground(new java.awt.Color(255, 51, 51));
        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 204));
        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(microtime, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addGap(6, 6, 6))
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(midduration, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                                    .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                        .addComponent(longduration, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                        .addGap(0, 0, Short.MAX_VALUE)))
                                                .addComponent(microduration, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addGap(6, 6, 6)
                                                        .addComponent(jLabel12))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                        .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(0, 0, Short.MAX_VALUE)))
                                        .addGap(18, 18, 18))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(149, 149, 149)
                                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(60, 60, 60)
                                        .addComponent(btnStartStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(101, 101, 101))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnSelectMusicFile, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {longduration, microduration, microtime, num1, num2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel11, jLabel2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel12, jLabel4});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(microtime, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(microduration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(num1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(midduration, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel9))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(num2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel12))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(longduration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel10))
                                .addGap(30, 30, 30)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSelectMusicFile, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jTextField1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnStartStop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(26, 26, 26))))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel1, jLabel11, jLabel12, jLabel2, jLabel4, jLabel5});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel10, jLabel3, jLabel8, jLabel9});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {longduration, midduration, num2});

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {microduration, microtime, num1});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnStartStopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartStopActionPerformed

        if (btnStartStop.getText().equals("Start")) {
            System.out.println("1111");
            if (Irest_Main.jTextField1.getText().length() > 1) {
                try {
                    System.out.println("22222");
                    Constants.start = true;
                    btnStartStop.setText("Stop");
                    this.setState(1);
                    minisizeScreen();

                    new Thread() {
                        public void run() {
                            Constants.start = true;
                            System.out.println("33333333");
                            while (Constants.start) {
                                System.out.println("444444444444");
                                Constants.currentTime = System.currentTimeMillis();
                                if ((Constants.checkValueOfMids == Constants.numberOfMids)) {
                                    System.out.println("55555555555");
                                    Constants.checkValueOfMicros = 0;
                                    Constants.checkValueOfMids = 0;
                                    while (System.currentTimeMillis() < (Constants.currentTime + Constants.timeMicroBreak)) {
                                        if (!Constants.start) {
                                            break;
                                        }
                                    }
                                    Constants.showDialoge = true;
                                    new Thread() {
                                        public void run() {
                                            long cm = System.currentTimeMillis();
                                            Constants.showDialoge = true;
                                            Constants.timers = 0;
                                            while (System.currentTimeMillis() - cm + Constants.timers < Constants.longDuration) {
                                                if (!Constants.start) {
                                                    break;
                                                }
                                            }
                                            Constants.showDialoge = false;
                                        }
                                    }.start();
                                    if (Constants.start) {
                                        Irest_dialogue.showDialog("Take a break and take a walk!!!..This is a Long Break", Constants.longDuration);
                                    }
                                } else if (Constants.checkValueOfMicros == Constants.numberOfMicros) {
                                    System.out.println("666666666666");
                                    Constants.checkValueOfMids++;
                                    Constants.checkValueOfMicros = 0;
                                    while (System.currentTimeMillis() < (Constants.currentTime + Constants.timeMicroBreak)) {
                                        if (!Constants.start) {
                                            break;
                                        }
                                    }
                                    new Thread() {
                                        public void run() {
                                            long cm = System.currentTimeMillis();
                                            Constants.showDialoge = true;
                                            Constants.timers = 0;
                                            while (System.currentTimeMillis() - cm + Constants.timers < Constants.midDuration) {
                                                if (!Constants.start) {
                                                    break;
                                                }
                                            }
                                            Constants.showDialoge = false;
                                        }
                                    }.start();
                                    if (Constants.start) {
                                        Irest_dialogue.showDialog("Take a pause and rest for some time!!..This is a Mid Break", Constants.midDuration);
                                    }
                                } else {
                                    System.out.println("7777777777777");
                                    System.out.println("Constants.start       " + Constants.start);
                                    Constants.checkValueOfMicros++;
                                    Constants.currentTime = System.currentTimeMillis();
                                    long cm = System.currentTimeMillis();

                                    while (System.currentTimeMillis() < Constants.timeMicroBreak + Constants.currentTime) {
                                        System.out.println(System.currentTimeMillis() - (Constants.timeMicroBreak + Constants.currentTime));

                                        if (!Constants.start) {
                                            break;
                                        }
                                    }
                                    System.out.println("888888888888888");
                                    new Thread() {

                                        public void run() {
                                            long cm = System.currentTimeMillis();
                                            Constants.showDialoge = true;
                                            Constants.timers = 0;
                                            System.out.println("9999999999");
                                            while (System.currentTimeMillis() - cm + Constants.timers < Constants.microDuration) {
                                                if (!Constants.start) {
                                                    break;
                                                }
                                            }
                                            System.out.println("aaaaaaaaaa");
                                            Constants.showDialoge = false;
                                        }
                                    }.start();

                                    if (Constants.start) {

                                        Irest_dialogue.showDialog("Close your eyes and do some eye exercises.!!. This is a Micro Break", Constants.microDuration);
                                    }

                                }

                            }
                        }
                    }.start();
                } catch (Exception e) {
                    ErrorDialoge.showError("Application crash. Exception found");
                }

            } else {
                ErrorDialoge.showError("Please select music file");
            }

        } else {
            Constants.start = false;
            btnStartStop.setText("Start");
        }

    }//GEN-LAST:event_btnStartStopActionPerformed

    private void btnSelectMusicFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelectMusicFileActionPerformed
        try {
            JFileChooser chooser;
            chooser = new JFileChooser();

            chooser.setCurrentDirectory(new java.io.File(""));
            chooser.setDialogTitle(" Browse");
            chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
            if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
                jTextField1.setText(Tools.backlashReplace(chooser.getSelectedFile().toString()));
            }
        } catch (Exception e) {
            ErrorDialoge.showError("Unable to select file");
        }

    }//GEN-LAST:event_btnSelectMusicFileActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (btnStartStop.getText().equals("Start")) {
            if (Irest_Main.jTextField1.getText().length() > 1) {
                try {
                    Constants.timeMicroBreak = Long.parseLong(microtime.getValue().toString()) * 60000;
                    Constants.microDuration = Long.parseLong(microduration.getValue().toString()) * 1000;
                    Constants.midDuration = Long.parseLong(midduration.getValue().toString()) * 60000;
                    Constants.longDuration = Long.parseLong(longduration.getValue().toString()) * 60000;
                    Constants.numberOfMicros = Long.parseLong(num1.getValue().toString());
                    Constants.numberOfMids = Long.parseLong(num2.getValue().toString());

                    Constants.schedule1 = "" + Constants.timeMicroBreak / 60000;
                    Constants.schedule2 = Constants.microDuration / 1000 + "";
                    Constants.schedule3 = Constants.numberOfMicros + "";
                    Constants.schedule4 = Constants.midDuration / 60000 + "";
                    Constants.schedule5 = Constants.numberOfMids + "";
                    Constants.schedule6 = Constants.longDuration / 60000 + "";
                    Constants.schedule7 = jTextField1.getText() + "";
                    Tools.creteConfigFile();
                    UpdateDialoge.showUpdateDialoge("Config file updated");
                } catch (Exception e) {
                    ErrorDialoge.showError("Unable to update config file");
                }
            } else {
                ErrorDialoge.showError("Please select music file");
            }
        } else {
            ErrorDialoge.showError("Please stop running");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void microtimeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_microtimeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_microtimeMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        Tools.createFolder();
        Tools.read();

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Irest_Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Irest_Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Irest_Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Irest_Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Irest_Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton btnSelectMusicFile;
    private javax.swing.JButton btnStartStop;
    public static javax.swing.JLabel image;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    public static javax.swing.JTextField jTextField1;
    private javax.swing.JSpinner longduration;
    private javax.swing.JSpinner microduration;
    private javax.swing.JSpinner microtime;
    private javax.swing.JSpinner midduration;
    private javax.swing.JSpinner num1;
    private javax.swing.JSpinner num2;
    // End of variables declaration//GEN-END:variables

    private void minisizeScreen() {

        try {
            System.out.println("setting look and feel");
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (Exception e) {
            System.out.println("Unable to set LookAndFeel");
        }

        if (SystemTray.isSupported()) {
            System.out.println("system tray supported");
            tray = SystemTray.getSystemTray();

            ActionListener exitListener = new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    System.out.println("Exiting....");
                    System.exit(0);
                }
            };
            PopupMenu popup = new PopupMenu();
            MenuItem defaultItem = new MenuItem("Exit");
            defaultItem.addActionListener(exitListener);
            popup.add(defaultItem);
            defaultItem = new MenuItem("Open");
            defaultItem.addActionListener(new ActionListener() {
                public void actionPerformed(ActionEvent e) {
                    setVisible(true);
                    setExtendedState(JFrame.NORMAL);
                }
            });
            try {
                InputStream is = new BufferedInputStream(getClass().getResourceAsStream(
                        "/com/irest/image/paint.png"));
                Image image = ImageIO.read(is);
                popup.add(defaultItem);
                trayIcon = new TrayIcon(image, "Irest", popup);
                trayIcon.setImageAutoSize(true);
            } catch (Exception e) {
            }

        } else {
            System.out.println("system tray not supported");
        }
        addWindowStateListener(new WindowStateListener() {
            public void windowStateChanged(WindowEvent e) {
                if (e.getNewState() == ICONIFIED) {
                    try {
                        tray.remove(trayIcon);
                        tray.add(trayIcon);
                        setVisible(false);
                        System.out.println("added to SystemTray");
                    } catch (Exception ex) {
                        ex.printStackTrace();
                    }
                }
                if (e.getNewState() == 7) {
                    try {
                        tray.remove(trayIcon);
                        tray.add(trayIcon);
                        setVisible(false);
                        System.out.println("added to SystemTray");
                    } catch (AWTException ex) {
                        System.out.println("unable to add to system tray");
                    }
                }
                if (e.getNewState() == MAXIMIZED_BOTH) {
                    tray.remove(trayIcon);
                    setVisible(true);
                    System.out.println("Tray icon removed");
                }
                if (e.getNewState() == NORMAL) {
                    tray.remove(trayIcon);
                    setVisible(true);
                    System.out.println("Tray icon removed");
                }
            }
        });
    }

    private void initialiseFirstValue() {
        Constants.timeMicroBreak = Long.parseLong(microtime.getValue().toString()) * 60000;
        Constants.microDuration = Long.parseLong(microduration.getValue().toString()) * 1000;
        Constants.midDuration = Long.parseLong(midduration.getValue().toString()) * 60000;
        Constants.longDuration = Long.parseLong(longduration.getValue().toString()) * 60000;
        Constants.numberOfMicros = Long.parseLong(num1.getValue().toString());
        Constants.numberOfMids = Long.parseLong(num2.getValue().toString());

        Constants.schedule1 = "" + Constants.timeMicroBreak / 60000;
        Constants.schedule2 = Constants.microDuration / 1000 + "";
        Constants.schedule3 = Constants.numberOfMicros + "";
        Constants.schedule4 = Constants.midDuration / 60000 + "";
        Constants.schedule5 = Constants.numberOfMids + "";
        Constants.schedule6 = Constants.longDuration / 60000 + "";
        Constants.schedule7 = jTextField1.getText() + "";
    }
}
